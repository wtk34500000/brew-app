{"ast":null,"code":"import _slicedToArray from \"/Users/tong/dev/andculture/breweries-app/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tong/dev/andculture/breweries-app/front-end/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport BreweriesList from \"./components/BreweriesList\";\nimport BreweryDetail from './components/BreweryDetail';\nimport Home from './components/Home';\nimport Carousel from './components/Carousel';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        brewDetail = _useState4[0],\n        setBrewDetail = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        term = _useState6[0],\n        setTerm = _useState6[1];\n\n  useEffect(() => {\n    if (term !== \"\") {\n      fetch(\"https://api.openbrewerydb.org/breweries?by_city=\".concat(term)).then(req => {\n        if (req.ok) {\n          return req.json();\n        } else {\n          throw Error(req.statusText);\n        }\n      }).then(result => setData(result)).catch(err => console.log(err));\n    } else {\n      alert(\"Please enter a valid city name!\");\n    }\n  }, [term]);\n  return React.createElement(\"div\", {\n    className: \"App mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Home, {\n    setTerm: setTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/breweries/:id\",\n    render: () => React.createElement(BreweryDetail, {\n      brew: brewDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/breweries\",\n    render: data && data.length > 0 ? () => React.createElement(BreweriesList, {\n      data: data,\n      setBrewDetail: setBrewDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : () => React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"No Result, Invalid City Name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    render: () => React.createElement(Carousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tong/dev/andculture/breweries-app/front-end/src/App.js"],"names":["React","useEffect","useState","Route","Switch","BreweriesList","BreweryDetail","Home","Carousel","App","data","setData","brewDetail","setBrewDetail","term","setTerm","fetch","then","req","ok","json","Error","statusText","result","catch","err","console","log","alert","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,OAAO,WAAP;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAG,GAAE,MAAK;AAAA,oBAEQP,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAEPQ,IAFO;AAAA,QAEDC,OAFC;;AAAA,qBAIqBT,QAAQ,CAAC,EAAD,CAJ7B;AAAA;AAAA,QAIPU,UAJO;AAAA,QAIKC,aAJL;;AAAA,qBAMUX,QAAQ,CAAC,EAAD,CANlB;AAAA;AAAA,QAMPY,IANO;AAAA,QAMDC,OANC;;AAQdd,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGa,IAAI,KAAG,EAAV,EAAa;AACXE,MAAAA,KAAK,2DAAoDF,IAApD,EAAL,CACCG,IADD,CACMC,GAAG,IAAG;AACV,YAAGA,GAAG,CAACC,EAAP,EAAU;AACR,iBAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,SAFD,MAEK;AACH,gBAAMC,KAAK,CAACH,GAAG,CAACI,UAAL,CAAX;AACD;AACF,OAPD,EAQCL,IARD,CAQMM,MAAM,IAAIZ,OAAO,CAACY,MAAD,CARvB,EASCC,KATD,CASOC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATZ;AAUD,KAXD,MAWK;AACHG,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACD;AAEF,GAhBQ,EAgBP,CAACd,IAAD,CAhBO,CAAT;AAkBA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,MAAM,EAAE,MAAK,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEH,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,MAAM,EAAEF,IAAI,IAAIA,IAAI,CAACmB,MAAL,GAAY,CAApB,GAAuB,MAAK,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEnB,IAArB;AAA2B,MAAA,aAAa,EAAEG,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAAuF,MAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,MAAM,EAAE,MAAK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD,CApCD;;AAsCA,eAAeJ,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport BreweriesList from \"./components/BreweriesList\";\nimport BreweryDetail from './components/BreweryDetail';\nimport Home from './components/Home';\nimport Carousel from './components/Carousel'\n\nconst App= ()=> {\n\n  const [data, setData]=useState([])\n\n  const [brewDetail, setBrewDetail]= useState({})\n\n  const [term, setTerm] = useState(\"\")\n  \n  useEffect(()=>{\n    if(term!==\"\"){\n      fetch(`https://api.openbrewerydb.org/breweries?by_city=${term}`)\n      .then(req =>{\n        if(req.ok){\n          return req.json()\n        }else{\n          throw Error(req.statusText)\n        }  \n      })\n      .then(result => setData(result))\n      .catch(err=>console.log(err))\n    }else{\n      alert(\"Please enter a valid city name!\")\n    }\n    \n  },[term])\n\n  return (\n    <div className=\"App mt-3\">\n        <Home setTerm={setTerm}/>\n      <Switch>\n        <Route path='/breweries/:id' render={()=> <BreweryDetail brew={brewDetail}/>}/>\n        <Route path='/breweries' render={data && data.length>0? ()=> <BreweriesList data={data} setBrewDetail={setBrewDetail}/>:()=><h1>No Result, Invalid City Name</h1>}/>\n        <Route path='/' render={()=> <Carousel />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}